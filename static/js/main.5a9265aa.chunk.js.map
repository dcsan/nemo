{"version":3,"sources":["components/FishSelector.tsx","components/LandingDataCard.tsx","_data.tsx","components/Header.tsx","_theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StyledSelect","styled","Select","_templateObject","FishSelector","_ref","triggerNextStep","fishes","steps","getFishSelectList","_useState","useState","_useState2","Object","slicedToArray","disabled","setDisabled","_useState3","value","_useState4","fish","setFish","react_default","a","createElement","options","virtualized","classes","selectControl","selectInput","onChange","concat","strings","fao3AMap","LandingDataTable","prompt_landingConfirm","date","time","container","geoLocation","languages","key","flag","label","atlanticCod","blueCrab","dolphinFish","grouper","kingCrab","pacificCod","redSnapper","seaCucumber","shark","swordfish","albacoreTuna","bigeyeTuna","skipjackTuna","yellowfinTuna","bluefinTuna","LocalizedStrings","en","input_placeholder","prompt_welcome","prompt_end","prompt_anotherOne","prompt_unavailable","prompt_initial","addNew","catch","transport","landing","sale","nothing","prompt_nothing","prompt_catch","prompt_quantity","prompt_preservation","prompt_catchCongrat","chilled","salted","fresh","prompt_landing","inprogress","finished","prompt_confirmData","dataIsAccurate","dataIsInaccurate","prompt_errorReported","timeZone","vn","rs","map","localStorageKey","savedLanguage","createOptionLabel","landingPromptOrder","createLandingPrompt","id","hideInput","component","LandingDataCard_LandingDataTable","message","previousValue","p","i","appendTrigger","catchPromptOrder","createCatchPrompt","FishSelector_FishSelector","replace","waitAction","user","validator","isNaN","build_default","ref","rewardMe","type","config","emoji","order","trigger","o","HeaderContainer","div","Header_templateObject","theme","headerBgColor","headerFontColor","_templateObject2","Header","language","onLanguageChanged","Header_StyledSelect","valueRenderer","_ref2","index_es","code","svg","className","lang","background","botBubbleColor","botFontColor","userBubbleColor","userFontColor","Container","App_templateObject","StyledChatBot","ChatBot","App_templateObject2","CircleButton","button","_templateObject3","prop","RefreshButton","Refresh","onClick","window","location","reload","App","state","localStorage","getItem","hasEnded","handleLanguageChanged","newLanguage","setItem","removeItem","handleEnd","values","_this","setState","setLanguage","this","toConsumableArray","end","styled_components_browser_esm","App_RefreshButton","assign","props","headerComponent","Header_Header","botAvatar","hideUserAvatar","cache","userAvatar","placeholder","userDelay","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a9265aa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Select from \"react-styled-select\";\nimport { getFishSelectList, strings, fao3AMap } from \"../_data\";\n\nconst StyledSelect = styled(Select)`\n  width: 100%;\n\n  .select-control {\n    border-radius: 2em;\n    background: #eee;\n  }\n\n  .select-input {\n    margin-left: 0.5em;\n  }\n`;\n\nexport const FishSelector = ({ triggerNextStep, steps } : any) => {\n  const fishes = getFishSelectList();\n  const [disabled, setDisabled] = useState(false);\n  const [fish, setFish] = useState(fishes[0].value);\n\n  return (\n    <StyledSelect\n      value={fish}\n      disabled={disabled}\n      options={fishes}\n      virtualized\n      classes={{\n        selectControl: \"select-control\",\n        selectInput: \"select-input\"\n      }}\n      onChange={(fish: string) => {\n        setFish(fish);\n        setDisabled(true);\n        triggerNextStep({\n          value: `${strings[fish]} ( 3A_CODE: ${fao3AMap[fish]} )`\n        });\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { strings } from \"../_data\";\n\nexport const LandingDataTable = () => (\n  <div>\n    {strings.prompt_landingConfirm}\n    <hr />\n    <table>\n      <tbody>\n        <tr>\n          <td>📅</td>\n          <td>{strings.date}</td>\n          <td>2016-12-14</td>\n        </tr>\n        <tr>\n          <td>⌚</td>\n          <td>{strings.time}</td>\n          <td>11:33:00.125+08:00</td>\n        </tr>\n        <tr>\n          <td>🚢</td>\n          <td> {strings.container}</td>\n          <td>f5c5ab8f-8bcf-446a-8dea-4cb625316ffd</td>\n        </tr>\n        <tr>\n          <td>📍</td>\n          <td>{strings.geoLocation}</td>\n          <td>geo:22.58425,120.31815</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n","import React from \"react\";\nimport Reward from \"react-rewards\";\n\nimport LocalizedStrings from \"react-localization\";\nimport { FishSelector } from \"./components/FishSelector\";\nimport { LandingDataTable } from \"./components/LandingDataCard\";\n\n// import { IDialogue } from \"./react-app-env\";\n\n// https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/src/examples/modules/Dropdown/common.js\nexport const languages = [\n  { key: \"us\", value: \"us\", flag: \"us\", label: \"United States\" },\n  { key: \"vn\", value: \"vn\", flag: \"vn\", label: \"Vietnam\" },\n  { key: \"rs\", value: \"rs\", flag: \"rs\", label: \"Serbia\" }\n];\n\nexport const fishes = [\n  \"atlanticCod\",\n  \"blueCrab\",\n  \"dolphinFish\",\n  \"grouper\",\n  \"kingCrab\",\n  \"pacificCod\",\n  \"redSnapper\",\n  \"seaCucumber\",\n  \"shark\",\n  \"swordfish\",\n  \"albacoreTuna\",\n  \"bigeyeTuna\",\n  \"skipjackTuna\",\n  \"yellowfinTuna\",\n  \"bluefinTuna\"\n];\n\nexport const fao3AMap : any = {\n  atlanticCod: \"LPS\",\n  blueCrab: \"CRB\",\n  dolphinFish: \"DOL\",\n  grouper: \"EWL\",\n  kingCrab: \"KCD\",\n  pacificCod: \"PCO\",\n  redSnapper: \"RES\",\n  seaCucumber: \"EHV\",\n  shark: \"HXC\",\n  swordfish: \"SWO\",\n  albacoreTuna: \"ALB\",\n  bigeyeTuna: \"BET\",\n  skipjackTuna: \"SKJ\",\n  yellowfinTuna: \"YFT\",\n  bluefinTuna: \"PBF\",\n}\n\nexport const strings: any = new LocalizedStrings({\n  en: {\n    input_placeholder: \"Type your answer . . .\",\n\n    atlanticCod: \"Atlantic Cod\",\n    blueCrab: \"Blue Crab (Atlantic)\",\n    dolphinFish: \"Dolphinfish (Mahi Mahi)\",\n    grouper: \"Potato Grouper\",\n    kingCrab: \"King Crab (red)\",\n    pacificCod: \"Pacific Cod\",\n    redSnapper: \"Red Snapper\",\n    seaCucumber: \"Black Spotted Sea Cucumber\",\n    shark: \"Frilled Shark\",\n    swordfish: \"Swordfish\",\n    albacoreTuna: \"Albacore Tuna\",\n    bigeyeTuna: \"Bigeye Tuna\",\n    skipjackTuna: \"Skipjack Tuna\",\n    yellowfinTuna: \"Yellowfin Tuna\",\n    bluefinTuna: \"Bluefin Tuna\",\n\n    prompt_welcome: \"Welcome back Captain!\",\n    prompt_end: \"See you soon Captain!\",\n    prompt_anotherOne: \"What else can I add for you Captain?\",\n    prompt_unavailable: \"I'm sorry Captain, I'm afraid I can't do that . . .\",\n\n    prompt_initial: \"What would you like to add?\",\n\n    addNew: \"Add new\",\n    catch: \"Catch 🐟\",\n    transport: \"Transport 🚢\",\n    landing: \"Landing ⚓\",\n    sale: \"Sale 💰\",\n    nothing: \"I'm good 😁\",\n\n    prompt_nothing: \"Smooth sailing 💨\",\n\n    prompt_catch: \"What have you caught?\",\n    prompt_quantity: \"How many {previousValue} did you catch?\",\n    prompt_preservation: \"How are you preserving them?\",\n    prompt_catchCongrat: \"🐟 Congratulations on the catch! 🐟\",\n    chilled: \"Frozen ❄\",\n    salted: \"Dried ♨\",\n    fresh: \"Fresh ✨\",\n\n    prompt_landing: \"Have you finished unpacking?\",\n    // prompt_cargoLoad: \"How heavy \"\n    prompt_landingConfirm:\n      \"⚓ Your time, container, and geolocation has been automatically recorded! Please review the data for accuracy:\",\n    inprogress: \"In-progress ⏳\",\n    finished: \"Finished 🏁\",\n\n    prompt_confirmData: \"Does the data seem accurate?\",\n\n    dataIsAccurate: \"Yes\",\n    dataIsInaccurate: \"No\",\n\n    prompt_errorReported:\n      \"I have reported this error to our engineers. TODO: Continue this flow to add self-input data\",\n\n    date: \"Date\",\n    time: \"Time\",\n    timeZone: \"Time Zone\",\n    container: \"Container\",\n    geoLocation: \"Location\"\n  },\n  vn: {\n    input_placeholder: \"Xin giao nhập thông tin\",\n\n\n    atlanticCod: \"Cá tuyết Đại Tây Dương\",\n    blueCrab: \"Cua xanh (Đại Tây Dương)\",\n    dolphinFish: \"Cá heo (Mahi Mahi)\",\n    grouper: \"Cá mú\",\n    kingCrab: \"Cua Vua\",\n    pacificCod: \"Cod Thái Bình Dương\",\n    redSnapper: \"Cá hồng\",\n    seaCucumber: \"Dưa chuột biển\",\n    shark: \"Cá mập\",\n    swordfish: \"Cá kiếm\",\n    albacoreTuna: \"Cá ngừ\",\n    bigeyeTuna: \"Cá ngừ mắt to\",\n    skipjackTuna: \"Cá ngừ vằn\",\n    yellowfinTuna: \"Cá ngừ vây vàng\",\n    bluefinTuna: \"Cá ngừ vây xanh\",\n\n    prompt_welcome: \"Chào mừng trở lại thuyền trưởng!\",\n    prompt_end: \"Hẹn gặp lại thuyền trưởng!\",\n    prompt_unavailable:\n      \"Xin lỗi Thuyền trưởng, phần mềm chưa được cài đặt  . . .\",\n\n    prompt_initial: \"Thuyền trưởng muốn làm gì??\",\n\n    addNew: \"Thêm mới\",\n    catch: \"Bắt 🐟\",\n    transport: \"Di chuyển 🚢\",\n    landing: \"Hạ cánh ⚓\",\n    sale: \"Giao bán 💰\",\n\n    prompt_catch: \"Loại bắt nào?\"\n  },\n  rs: {\n    input_placeholder: \"Реците капетану Ахои!\",\n    prompt_welcome: \"Добродошли назад капетане!\",\n    prompt_end: \"Видимо се ускоро капетане!\",\n    prompt_unavailable:\n      \"Жао ми је капетане, бојим се да то не могу да урадим . . .\",\n\n    atlanticCod: \"Атлански бакалар\",\n    blueCrab: \"Плави рак (Атлантик)\",\n    dolphinFish: \"Долпхинфисх (Махи Махи)\",\n    grouper: \"Групер\",\n    kingCrab: \"Краљевска краба\",\n    pacificCod: \"Пацифички koбакалар\",\n    redSnapper: \"Црвени снапер\",\n    seaCucumber: \"Морски краставац\",\n    shark: \"Ајкула\",\n    swordfish: \"Сабљарка\",\n    albacoreTuna: \"Дугоперајна туна\",\n    bigeyeTuna: \"Велика ока туна\",\n    skipjackTuna: \"Пругаста туна\",\n    yellowfinTuna: \"Жутоперајна туна\",\n    bluefinTuna: \"Плавоперајна туна\",\n\n\n\n    prompt_initial: \"Шта желите да радите?\",\n\n    addNew: \"Додај ново\",\n    catch: \"Цатцх 🐟\",\n    prompt_catch: \"Каква врста улова?\",\n    transport: \"Транспорт 🚢\",\n    landing: \"Слетање ⚓\",\n    sale: \"Продаја  💰\"\n  }\n});\n\nexport const getFishSelectList = () =>\n  fishes.map((value) => ({\n    value,\n    label: `${strings[value]}`\n  }));\n\nexport const localStorageKey = {\n  savedLanguage: \"NEMO_LANGUAGE\"\n};\n\nexport const createSteps = () => [\n  {\n    id: \"prompt_welcome\",\n    hideInput: true,\n    message: () => strings.prompt_welcome,\n    trigger: \"prompt_initial\"\n  },\n  {\n    id: \"prompt_initial\",\n    hideInput: true,\n    message: () => strings.prompt_initial,\n    trigger: \"prompt_events\"\n  },\n  {\n    id: `prompt_anotherOne`,\n    hideInput: true,\n    message: () => strings.prompt_anotherOne,\n    trigger: \"prompt_events\"\n  },\n  {\n    id: `prompt_nothing`,\n    hideInput: true,\n    message: () => strings.prompt_nothing,\n    trigger: \"prompt_end\"\n  },\n  {\n    id: \"prompt_events\",\n    hideInput: true,\n    options: [\"catch\", \"transport\", \"landing\", \"sale\", \"nothing\"].map(\n      value => ({\n        value,\n        label: `${strings[value]}`,\n        trigger: `prompt_${value}`\n      })\n    )\n  },\n  ...[\"transport\", \"sale\"].map(value => ({\n    id: `prompt_${value}`,\n    message: () => strings.prompt_unavailable,\n    trigger: \"prompt_end\"\n  })),\n  ...createCatchPrompt(),\n  ...createLandingPrompt(),\n  {\n    id: \"prompt_end\",\n    hideInput: true,\n    message: () => strings.prompt_end,\n    end: true\n  }\n];\n\nconst createOptionLabel = (value: string) => ({\n  value,\n  label: strings[value]\n});\n\nconst landingPromptOrder = [\n  \"prompt_landing\",\n  \"add_landingDisposition\",\n  \"prompt_landingConfirm\",\n  \"prompt_confirmData\",\n  \"add_confirmData\",\n  \"prompt_checkConfirm\",\n  \"prompt_anotherOne\"\n];\n\nconst createLandingPrompt = () =>\n  [\n    {\n      id: `prompt_landing`,\n      hideInput: true\n    },\n    {\n      id: `add_landingDisposition`,\n      options: [\"inprogress\", \"finished\"].map(createOptionLabel)\n    },\n    // { // TODO: Stretch, ask cargo load\n    //   id: `prompt_cargoLoad`,\n    //   hideInput: true,\n    //   message: ({ previousValue }: any) =>\n    //     previousValue === \"finished\"\n    //       ? strings.prompt_cargoLoad\n    //       : \"✔\"\n    // },\n    {\n      id: `prompt_landingConfirm`,\n      component: <LandingDataTable/>\n    },\n    {\n      id: `prompt_confirmData`,\n      hideInput: true\n    },\n    {\n      id: `add_confirmData`,\n      hideInput: true,\n      options: [\"dataIsAccurate\", \"dataIsInaccurate\"].map(createOptionLabel)\n    },\n    {\n      id: `prompt_checkConfirm`,\n      hideInput: true,\n      message: ({ previousValue }: any) =>\n        previousValue === \"dataIsInaccurate\"\n          ? strings.prompt_errorReported\n          : \"✔\"\n    }\n  ].map((p: any, i) => appendTrigger(p, i, landingPromptOrder));\n\nconst catchPromptOrder = [\n  \"prompt_catch\",\n  \"add_catch\",\n  \"prompt_quantity\",\n  \"add_quantity\",\n  \"prompt_preservation\",\n  \"add_preservation\",\n  \"prompt_catchCongrat\",\n  \"prompt_anotherOne\"\n];\n\nconst createCatchPrompt = () =>\n  [\n    {\n      id: `prompt_catch`,\n      hideInput: true\n    },\n    {\n      id: `add_catch`,\n      component: <FishSelector />,\n      hideInput: true,\n      replace: false,\n      waitAction: true\n    },\n    {\n      id: `prompt_quantity`,\n      hideInput: true\n    },\n    {\n      id: `add_quantity`,\n      user: true,\n      validator: (value : number) => {\n        if (isNaN(value) || value <= 0) {\n          return 'It should be a number greater than 0!';\n        }\n        return true;\n      },\n    },\n    {\n      id: `prompt_preservation`,\n      hideInput: true\n    },\n    {\n      id: `add_preservation`,\n      hideInput: true,\n      options: [\"chilled\", \"salted\", \"fresh\"].map(createOptionLabel)\n    },\n    {\n      id: `prompt_catchCongrat`,\n      component: (\n        <Reward\n          ref={(ref: any) => ref.rewardMe()}\n          type=\"emoji\"\n          config={{\n            emoji: [\"🐟\", \"🦐\", \"🐙\", \"🦀\", \"🐳\", \"🐋\", \"🐬\", \"🦑\", \"🐡\", \"🦈\"]\n          }}\n        >\n          <div>{strings.prompt_catchCongrat}</div>\n        </Reward>\n      )\n    }\n  ].map((p: any, i) => appendTrigger(p, i, catchPromptOrder));\n\nconst appendTrigger = (p: any, i: number, order: Array<string>) => {\n  const trigger = order[i + 1];\n\n  if (!p.options) {\n    p.trigger = trigger;\n    if (p.hideInput && !p.waitAction && !p.message) {\n      p.message = strings[p.id];\n    }\n  } else {\n    p.options = p.options.map((o: any) => {\n      o.trigger = trigger;\n      return o;\n    });\n  }\n  return p;\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Flag from \"react-country-flag\";\n\nimport Select from \"react-styled-select\";\n\nimport { languages } from \"../_data\";\n\nconst HeaderContainer = styled.div`\n  height: 3.6em;\n  background: ${p => p.theme.headerBgColor};\n  color: ${p => p.theme.headerFontColor};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n\n  h1 {\n    font-size: 1.8em;\n    margin-left: 2em;\n  }\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 9em;\n  margin-right: 2em;\n\n  .select-control {\n    border-radius: 2em;\n    background: #eee;\n  }\n\n  .select-input {\n    margin-left: 0.5em;\n  }\n  \n  .select-label {\n      color: #000;\n  }\n`;\n\nexport const Header = ({language, onLanguageChanged} : any) => {\n\n  return (\n    <HeaderContainer>\n      <h1>Nemo</h1>\n\n      <StyledSelect\n        value={language}\n        options={languages}\n        classes={{\n          selectControl: \"select-control\",\n          selectInput: \"select-input\"\n        }}\n        valueRenderer={({value, label}: any)=> \n        <div>\n            <Flag code={value} svg /> <span className=\"select-label\">{label}</span>\n        </div>}\n        onChange={(lang: string) => {\n          onLanguageChanged(lang);\n        }}\n      />\n    </HeaderContainer>\n  );\n};\n","export const theme = {\n  background: \"#f5f8fb\",\n  // fontFamily: \"Helvetica Neue\",\n  headerBgColor: \"#00b0ff\",\n  headerFontColor: \"#fff\",\n  botBubbleColor: \"#00b0ff\",\n  botFontColor: \"#fff\",\n  userBubbleColor: \"#fff\",\n  userFontColor: \"#4a4a4a\"\n};","import React, { Component } from \"react\";\n\nimport ChatBot from \"react-simple-chatbot\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { Refresh } from \"styled-icons/material/Refresh\";\n\nimport { Header } from \"./components/Header\";\n\nimport { theme } from \"./_theme\";\nimport { strings, localStorageKey, languages, createSteps } from \"./_data\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  justify-content: space-evenly;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledChatBot = styled(ChatBot)`\n  width: 90%;\n  height: 90%;\n  .rsc-os-options {\n    display: flex;\n    flex-flow: wrap;\n    flex-direction: row-reverse;\n  }\n`;\n\nconst CircleButton = styled.button`\n  width: 4em;\n  height: 4em;\n  border-radius: 50%;\n  position: absolute;\n  border: none;\n  bottom: 5em;\n  z-index: 1000;\n  background: ${prop=>prop.theme.headerBgColor};\n  color: ${prop=>prop.theme.headerFontColor};\n  button:focus {\n    outline: none;\n  }\n`;\n\nconst RefreshButton = () => (\n  <CircleButton>\n    <Refresh onClick={()=>window.location.reload()}/>\n  </CircleButton>\n);\n\nexport default class App extends Component {\n  state = {\n    language:\n      localStorage.getItem(localStorageKey.savedLanguage) || languages[0].value,\n    hasEnded: false\n  };\n\n  handleLanguageChanged = (newLanguage: string) => {\n    localStorage.setItem(localStorageKey.savedLanguage, newLanguage);\n    localStorage.removeItem(\"rsc_cache\");\n    window.location.reload();\n  };\n\n  handleEnd = ({ steps, values }: any) => {\n    this.setState({\n      hasEnded: true\n    });\n  };\n\n  render() {\n    strings.setLanguage(this.state.language);\n\n    const steps = createSteps();\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Container>\n          {this.state.hasEnded && <RefreshButton />}\n          <StyledChatBot\n            { ... this.props}\n            headerComponent={\n              <Header\n                language={this.state.language}\n                onLanguageChanged={this.handleLanguageChanged}\n              />\n            }\n            botAvatar={\"assets/avatar.png\"}\n            hideUserAvatar\n            cache\n            userAvatar={\"assets/captain.png\"}\n            placeholder={strings.placeholder}\n            userDelay={0}\n            steps={steps}\n            handleEnd={this.handleEnd}\n          />\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}